#include "../header/segmodel.h"

segModel::segModel(cv::Mat mat, int processmode)
{
    this->algoCode = processmode;
    this->init_mat = new cv::Mat(mat);
    this->latest_mat = new cv::Mat(mat) ; //[todo]
}

segModel::~segModel(){
    printf("Destroy this model");
    delete this->init_mat ;
    delete this->latest_mat ;
}

void segModel::updateProcessMode(int processMode){
    // test
    algoCode=processMode;
}

void segModel::process(){
    if(algoCode == ALGO_INVALID){
        printf("segImageModel do not have legal algo parameter set \n") ;
        //do nothing
    }else if(algoCode == ALGO_GAUSSIAN_FILTER){
        //unit test
        *(latest_mat) = *(init_mat);

        //real implement
        //Gaussian_filter *filter = new Gaussian_filter();
        //*this->latestData=filter->GaussianImage(*this->latestData());
    }else{
        printf("segImageModel do not have legal algo parameter set \n") ;
        //do nothing
    }
}

cv::Mat segModel::getLatestData(){
	return *latest_mat; 
}

bool segModel::saveModel(const std::string &filename){
    // unit test
    // do nothing
    printf("saveModel()\n");
    return true;

    // [todo]
    // cv::imwrite(filename, this->latest_mat);
    // return true ;
}
